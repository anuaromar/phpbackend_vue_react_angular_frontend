{"remainingRequest":"/Users/anuar/affinhwang/php-main/php-vue-crud-simple/frontend-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anuar/affinhwang/php-main/php-vue-crud-simple/frontend-vue/src/components/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anuar/affinhwang/php-main/php-vue-crud-simple/frontend-vue/src/components/User.vue","mtime":1655098415791},{"path":"/Users/anuar/affinhwang/php-main/php-vue-crud-simple/frontend-vue/node_modules/cache-loader/dist/cjs.js","mtime":1655027360284},{"path":"/Users/anuar/affinhwang/php-main/php-vue-crud-simple/frontend-vue/node_modules/babel-loader/lib/index.js","mtime":1655027360339},{"path":"/Users/anuar/affinhwang/php-main/php-vue-crud-simple/frontend-vue/node_modules/cache-loader/dist/cjs.js","mtime":1655027360284},{"path":"/Users/anuar/affinhwang/php-main/php-vue-crud-simple/frontend-vue/node_modules/vue-loader/lib/index.js","mtime":1655027359872}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserDataService from \"../service/UserDataService\";\n\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      first_name: \"\",\n      last_name: \"\",\n      email_id: \"\",\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    goBack(){\n      this.$route.go(-1)\n    },\n    refreshUserDetails() {\n       if (this.id != -1) {\n      UserDataService.retrieveUser(this.id).then((res) => {\n        this.first_name = res.data.first_name;\n        this.last_name = res.data.last_name;\n        this.email_id = res.data.email_id;\n      });\n       }\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.first_name) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.first_name.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in First Name\");\n      }\n      if (!this.last_name) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.last_name.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in Last Name\");\n      }\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            first_name: this.first_name,\n            last_name: this.last_name,\n            email_id: this.email_id,\n          }).then(() => {\n            this.$router.push(\"/users\");\n          });\n        } else {\n          UserDataService.updateUser({\n            id: this.id,\n            first_name: this.first_name,\n            last_name: this.last_name,\n            email_id: this.email_id,\n          }).then(() => {\n            this.$router.push(\"/users\");\n          });\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshUserDetails();\n  },\n};\n",{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"User.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h3>User</h3>   <router-link to=\"/users\">List User</router-link>\n    <div class=\"container\">\n      <form @submit=\"validateAndSubmit\">\n        <div v-if=\"errors.length\">\n          <div\n            class=\"alert alert-danger\"\n            v-bind:key=\"index\"\n            v-for=\"(error, index) in errors\"\n          >\n            {{ error }}\n          </div>\n        </div>\n        <fieldset class=\"form-group\">\n          <label>First Name</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"first_name\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Last Name</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"last_name\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Email Id</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"email_id\" />\n        </fieldset>\n        <button class=\"btn btn-success\" type=\"submit\">Save</button>\n      \n      \n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport UserDataService from \"../service/UserDataService\";\n\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      first_name: \"\",\n      last_name: \"\",\n      email_id: \"\",\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    goBack(){\n      this.$route.go(-1)\n    },\n    refreshUserDetails() {\n       if (this.id != -1) {\n      UserDataService.retrieveUser(this.id).then((res) => {\n        this.first_name = res.data.first_name;\n        this.last_name = res.data.last_name;\n        this.email_id = res.data.email_id;\n      });\n       }\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.first_name) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.first_name.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in First Name\");\n      }\n      if (!this.last_name) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.last_name.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in Last Name\");\n      }\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            first_name: this.first_name,\n            last_name: this.last_name,\n            email_id: this.email_id,\n          }).then(() => {\n            this.$router.push(\"/users\");\n          });\n        } else {\n          UserDataService.updateUser({\n            id: this.id,\n            first_name: this.first_name,\n            last_name: this.last_name,\n            email_id: this.email_id,\n          }).then(() => {\n            this.$router.push(\"/users\");\n          });\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshUserDetails();\n  },\n};\n</script>\n"]}]}